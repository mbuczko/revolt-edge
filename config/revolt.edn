{
 ;; tasks

 :revolt.task/aot    {:extra-namespaces [clout.core
                                         mount.core
                                         failjure.core
                                         clojure.tools.reader.reader-types
                                         clojure.tools.logging.impl]}

 :revolt.task/info   {:name "edge"
                      :package defunkt.edge
                      :version "0.0.1"
                      :description "Sample project to see revolt in action."}

 :revolt.task/test   {:report eftest.report.pretty/report}

 :revolt.task/sass   {:source-path "assets/styles"
                      :output-path "styles"}

 :revolt.task/assets {:assets-paths ["assets"]
                      :exclude-paths ["assets/styles"]
                      :output-dir "assets"}

 :revolt.task/codox  {:source-paths ["src/clj"]
                      :source-uri "http://github.com/mbuczko/revolt-edge/blob/{version}/{filepath}#L{line}"
                      :namespaces [edge.http
                                   edge.middleware]}

 :revolt.task/cljs   {:compiler {:output-dir "scripts"
                                 :asset-path "/scripts"
                                 :preloads [devtools.preload]
                                 :modules {:cljs-base {:output-to "scripts/base.js"}
                                           :vendor    {:entries #{re-frame.core}
                                                       :output-to "scripts/vendor.js"}
                                           :main      {:entries #{edge.main}
                                                       :output-to "scripts/main.js"}}
                                 :foreign-libs [{:file "assets/scripts/antd.inc.js"
                                                 :file-min "assets/scripts/antd.min.inc.js"
                                                 :provides ["cljsjs.antd"]
                                                 :requires ["cljsjs.react"
                                                            "cljsjs.react.dom"
                                                            "cljsjs.moment"]}]}
                      :builds [{:id "main-ui"
                                :source-paths ["src/cljs"]}]}

 :revolt.task/capsule {:exclude-paths #{"test" "config" "src/cljs"}
                       :output-jar "dist/edge.jar"
                       :capsule-type :thin
                       :main "edge.main"
                       :min-java-version "1.8.0"
                       :jvm-args "-server"
                       :system-properties "ENV=prod"
                       :caplets {"MavenCapsule" [["Repositories" "central clojars(https://repo.clojars.org/)"]
                                                 ["Allow-Snapshots" "true"]]}}

 ;; plugins

 :revolt.plugin/nrepl {:port 5600}

 :revolt.plugin/rebel {:init-ns "edge.system"
                       :init-banner "\n ***** Welcome to EDGE *****\n\n Usage:  (go)    => runs edge system\n         (reset) => restarts the system\n"}

 :revolt.plugin/watch {:on-change {:revolt.task/sass "glob:assets/styles/*.scss"
                                   :revolt.task/test "glob:**/*.clj"}}

 :revolt.plugin/figwheel {:client-print-to [:console]
                          :builds ["main-ui"]}}
